//
//  PlacemarksListViewController.swift
//  WunderTest
//
//  Created by Danijel Kecman on 11/6/18.
//  Copyright (c) 2018 Danijel Kecman. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import Reusable

final class PlacemarksListViewController: UIViewController {
  
  // MARK: - IBOutlets -
  
  @IBOutlet weak var tableView: UITableView!
  
  // MARK: - Public properties -
  
  var presenter: PlacemarksListPresenterInterface!
  
  // MARK: - Private properties -
  private let refreshControl = UIRefreshControl()
  
  // MARK: - Lifecycle -
  
  override func viewDidLoad() {
    super.viewDidLoad()
    _configure()
    presenter.viewDidLoad()
  }
  
  deinit {
    print("Unregistering PlacemarksListViewController")
    EventBus.unregister(self, name: Constants.EventBus.didLoadPlacemarksEvent)
  }
  
  // MARK: - Private functions -
  
  private func _configure() {
    // Table view and refresh control
    // Add Refresh Control to Table View
    if #available(iOS 10.0, *) {
      tableView.refreshControl = refreshControl
    } else {
      tableView.addSubview(refreshControl)
    }
    refreshControl.addTarget(self, action: #selector(refreshPlacemarks(_:)), for: .valueChanged)
    tableView.register(cellType: PlacemarkTableViewCell.self)
    tableView.tableFooterView = UIView()
    
    // EventBus
    EventBus.onMainThread(self, name: Constants.EventBus.didLoadPlacemarksEvent) { result in
      print("didLoadPlacemarksEvent")
      self.presenter.viewDidLoad()
    }
  }
  
  @objc private func refreshPlacemarks(_ sender: Any) {
    // Fetch Weather Data
    presenter.viewDidLoad()
  }
}

// MARK: - UITableView Extension -

extension PlacemarksListViewController: UITableViewDataSource, UITableViewDelegate {
  
  func numberOfSections(in tableView: UITableView) -> Int {
    return presenter.numberOfPlacemarkSections()
  }
  
  func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    return presenter.numberOfPlacemarkItems(in: section)
  }
  
  func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
    let item = presenter.placemarkItem(at: indexPath)
    
    let cell: PlacemarkTableViewCell = tableView.dequeueReusableCell(for: indexPath)
    cell.configure(with: item)
    
    return cell
  }
  
}


// MARK: - Extensions -

extension PlacemarksListViewController: PlacemarksListViewInterface {
  func refreshPlacemarksTable() {
    DispatchQueue.main.async {
      self.refreshControl.endRefreshing()
      self.tableView.reloadData()
    }
  }
}

